# allow the traditional name "mysql-shared" even with a so-versioned lib
setBadness('shlib-policy-name-error', 0)

# Suppress several "false positive" messages which we cannot prevent:
# Oracle text we must not change:
addFilter("MySQL.* invalid-license")
addFilter("mysql.* invalid-license")
addFilter("MySQL.* name-repeated-in-summary")
addFilter("mysql.* name-repeated-in-summary")
addFilter("MySQL.* no-version-in-last-changelog")
addFilter("mysql.* no-version-in-last-changelog")
addFilter("MySQL.*src.* invalid-spec-name")
addFilter("mysql.*src.* invalid-spec-name")
# Oracle code we must not change:
addFilter("MySQL.*shared.* shared-lib-calls-exit /usr/lib64/libmysqlclient")
addFilter("mysql.*shared.* shared-lib-calls-exit /usr/lib64/libmysqlclient")
addFilter("MySQL.*server.* binary-or-shlib-calls-gethostbyname /usr/bin/resolveip")
addFilter("mysql.*server.* binary-or-shlib-calls-gethostbyname /usr/bin/resolveip")
# "obsolete" the Oracle commercial RPMs:
addFilter("MySQL.* obsolete-not-provided mysql[^ ]*advanced")
addFilter("mysql.* obsolete-not-provided mysql[^ ]*advanced")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*advanced")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*advanced")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*classic")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*classic")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*community")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*community")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*enterprise")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*enterprise")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*pro")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*pro")
addFilter("MySQL.* obsolete-not-provided MySQL[^ ]*standard")
addFilter("mysql.* obsolete-not-provided MySQL[^ ]*standard")
# ... and the packages we dropped on intention:
addFilter("MySQL.*devel.* obsolete-not-provided MySQL-embedded-devel")
addFilter("mysql.*devel.* obsolete-not-provided MySQL-embedded-devel")
addFilter("MySQL.*devel.* obsolete-not-provided mysql-embedded-devel")
addFilter("mysql.*devel.* obsolete-not-provided mysql-embedded-devel")
addFilter("MySQL.*test.* obsolete-not-provided MySQL-bench")
addFilter("mysql.*test.* obsolete-not-provided MySQL-bench")
addFilter("MySQL.*test.* obsolete-not-provided mysql-bench")
addFilter("mysql.*test.* obsolete-not-provided mysql-bench")
# Oracle does not strip binaries, and neither will we:
addFilter("MySQL.* unstripped-binary-or-object /usr/s?bin/.*")
addFilter("mysql.* unstripped-binary-or-object /usr/s?bin/.*")
addFilter("MySQL.* unstripped-binary-or-object /usr/lib64/.*")
addFilter("mysql.* unstripped-binary-or-object /usr/lib64/.*")
addFilter("MySQL.*test.* unstripped-binary-or-object /usr/share/mysql-test/lib/.*")
addFilter("mysql.*test.* unstripped-binary-or-object /usr/share/mysql-test/lib/.*")
# Pre-defined certificates are needed for SSL tests, also a binary:
addFilter("MySQL.*test.* pem-certificate")
addFilter("mysql.*test.* pem-certificate")
addFilter("MySQL.*test.* arch-dependent-file-in-usr-share /usr/share/mysql-test/lib/My/SafeProcess/my_safe_process")
addFilter("mysql.*test.* arch-dependent-file-in-usr-share /usr/share/mysql-test/lib/My/SafeProcess/my_safe_process")
# Oracle doesn't have a "check" section (yet):
addFilter("MySQL.* make-check-outside-check-section")
addFilter("mysql.* make-check-outside-check-section")
# Documentation issues:
addFilter("MySQL.*server.* no-manual-page-for-binary mysqld-debug")
addFilter("mysql.*server.* no-manual-page-for-binary mysqld-debug")
# File naming:
addFilter("MySQL.*server.* incoherent-init-script-name mysql")
addFilter("mysql.*server.* incoherent-init-script-name mysql")
# End of the "false positive" messages which we cannot prevent.

